{"version":3,"sources":["components/MonthListItem/index.js","components/MonthListItem/MonthListItem.js","components/UserListItem/index.js","components/UserListItem/UserListItem.js","components/List/index.js","components/List/List.js","api/api.js","components/App/App.js","index.js"],"names":["MonthListItem","props","state","color","count","this","setState","console","log","name","changeFilter","className","onMouseOver","React","Component","UserListItem","firstName","lastName","dob","List","items","isUsers","list","map","item","id","itemProps","key","_url","errObj","url","status","message","fetch","res","ok","json","fetchData","App","updateMonthsArray","month","monthIndex","months","findIndex","slice","onFilterChange","filter","users","loaded","err","Api","get","then","data","forEach","user","Date","Number","getMonth","catch","visibleUsers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbd59131.chunk.js","sourcesContent":["import MonthListItem from \"./MonthListItem\";\n\nexport default MonthListItem;\n","import React from \"react\";\nimport \"./monthListItem.css\";\n\nclass Month extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: ''\n    }\n  }\n\n  componentDidMount() {\n    const { count } = this.props;\n\n    if (count >= 11) {\n      this.setState({ color: 'red' })\n    } else if (count < 11 && count >= 7) {\n      this.setState({ color: 'green' })\n    } else if (count < 7 && count >= 3) {\n      this.setState({ color: 'blue' })\n    } else if (count < 3) {\n      this.setState({ color: 'grey' })\n    }\n    console.log(this.state.color)\n  }\n\n  render() {\n    const {name, count, changeFilter} = this.props;\n\n    return (\n      <div className={`user ${this.state.color}`} onMouseOver={changeFilter}>\n        {name}, {count}\n      </div>\n    )\n  }\n}\n\nexport default Month;\n","import UserListItem from \"./UserListItem\";\n\nexport default UserListItem;\n","import React from \"react\";\nimport \"./UserListItem.css\";\n\nconst UserListItem = (props) => {\n  const { firstName, lastName, dob } = props;\n\n  return (\n    <div className=\"user\">\n      <p className=\"name\">Name: {firstName} {lastName}</p>\n      <p> DOB: {dob}</p>\n    </div>\n  )\n};\n\nexport default UserListItem;\n","import List from \"./List\";\n\nexport default List;\n","import React from \"react\";\nimport MonthListItem from \"../MonthListItem\";\nimport UserListItem from \"../UserListItem\";\nimport \"./list.css\";\n\nconst List = ({items, isUsers, changeFilter}) => {\n  const list = items.map((item) => {\n    const {id, ...itemProps} = item;\n\n    return (\n      <div key={id}>\n        {isUsers ? <UserListItem {...itemProps} /> :\n          <MonthListItem\n            {...itemProps}\n            changeFilter={() => changeFilter(id)}\n          />\n        }\n      </div>\n    );\n  });\n\n  if (items) {\n    return <div className=\"list\">{list}</div>;\n  } else {\n    return null;\n  }\n};\n\nexport default List;\n","class Api {\n  _url = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\n\n  errObj = (url, status) => {\n    return {\n      message: `Invalid request: ${url}, status ${status}`,\n      status: status\n    };\n  };\n\n  async fetchData() {\n    const res = await fetch(`${this._url}`);\n    if (!res.ok) {\n      throw this.errObj(`${this._url}`, res.status);\n    }\n    return res.json();\n  }\n\n  async get() {\n    return this.fetchData();\n  }\n}\n\nexport default new Api();","import React from 'react';\nimport List from '../List';\nimport Api from '../../api/api';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      months: [\n        { id: 0, name: \"January\", count: 0 },\n        { id: 1, name: \"February\", count: 0 },\n        { id: 2, name: \"March\", count: 0 },\n        { id: 3, name: \"April\", count: 0 },\n        { id: 4, name: \"May\", count: 0 },\n        { id: 5, name: \"June\", count: 0 },\n        { id: 6, name: \"July\", count: 0 },\n        { id: 7, name: \"August\", count: 0 },\n        { id: 8, name: \"September\", count: 0 },\n        { id: 9, name: \"October\", count: 0 },\n        { id: 10, name: \"November\", count: 0 },\n        { id: 11, name: \"December\", count: 0 }\n      ],\n      filter: null,\n      loaded: false,\n      err: {}\n    };\n  }\n\n  componentDidMount() {\n    Api.get()\n      .then((data) => {\n        this.setState({users: data});\n        data.forEach((user) => {\n          const dob = new Date(user.dob);\n\n          this.state.months.forEach((month) => {\n            if (month.id === Number(dob.getMonth())) {\n              this.updateMonthsArray(month)\n            }\n          })\n        });\n        this.setState({loaded: true});\n        console.log(this.state.months)\n      })\n      .catch((err) => {\n        this.setState({err: err})\n      })\n  }\n\n  updateMonthsArray = (month) => {\n    const monthIndex = this.state.months.findIndex(item => item.id === month.id);\n    const updateMonth = (item, count) => {\n      return {\n        ...item,\n        count: item.count + count\n      }\n    };\n\n    this.setState(({ months }) => ({\n      months: [...months.slice(0, monthIndex),  updateMonth(months[monthIndex], 1), ...months.slice(monthIndex + 1)]\n    }))\n  };\n\n  onFilterChange = (month) => {\n    this.setState({ filter: month })\n  };\n\n  render() {\n    const { months, users, loaded, filter } = this.state;\n    const userMonthOfBirth = (user) => Number(new Date(user.dob).getMonth());\n    const visibleUsers = users.filter((item) => userMonthOfBirth(item) === filter);\n\n    return (\n      <div className=\"wrapper\">\n        {\n          loaded && <List items={months}\n                              changeFilter={this.onFilterChange}\n                              isUsers={false} />\n        }\n        {\n          filter === null ? 'Hold' :\n          <List items={visibleUsers}\n                isUsers={true} />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}